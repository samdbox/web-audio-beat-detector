// This is the minified and stringified code of the web-audio-beat-detector-worker package.
export const worker = `!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("@babel/runtime/helpers/toConsumableArray")):"function"==typeof define&&define.amd?define(["@babel/runtime/helpers/toConsumableArray"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)._toConsumableArray)}(this,function(e){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=t(e),a=function(e,t,n){for(var a=e.length,r=[],o=!1,s=0;s<a;s+=1)e[s]>t?o=!0:o&&(o=!1,r.push(s-1),s+=n/4-1);return o&&r.push(a-1),r},r=function(e,t,r){var o=function(e){for(var t=0,n=e.length,a=0;a<n;a+=1)e[a]>t&&(t=e[a]);return t}(e),s=.3*o,i=[],u=o-.05*o;if(o>.25)for(;i.length<30&&u>=s;)i=a(e,u,t),u-=.05*o;var f=function(e,t){var a,r,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},s=Math.max(0,null!==(a=o.minTempo)&&void 0!==a?a:90),i=Math.max(0,null!==(r=o.maxTempo)&&void 0!==r?r:180),u=[];return e.forEach(function(e){for(var a=60/(e.interval/t);a<s;)a*=2;for(;a>i;)a/=2;var r=!1,o=e.peaks.length;u.forEach(function(t){if(t.tempo===a&&(t.score+=e.peaks.length,t.peaks=[].concat(n.default(t.peaks),n.default(e.peaks)),r=!0),t.tempo>a-.5&&t.tempo<a+.5){var s=2*Math.abs(t.tempo-a);o+=(1-s)*t.peaks.length,t.score+=(1-s)*e.peaks.length}}),r||u.push({peaks:e.peaks,score:o,tempo:a})}),u}(function(e){var t=[];return e.forEach(function(n,a){for(var r=Math.min(e.length-a,10),o=function(r){var o=e[a+r]-n;t.some(function(e){return e.interval===o&&(e.peaks.push(n),!0)})||t.push({interval:o,peaks:[n]})},s=1;s<r;s+=1)o(s)}),t}(i),t,r);return f.sort(function(e,t){return t.score-e.score}),f};addEventListener("message",function(e){var t=e.data;try{if("analyze"===t.method){var n=t.id,a=t.params,o=function(e,t,n){var a=r(e,t,n);if(0===a.length)throw new Error("The given channelData does not contain any detectable beats.");return a[0].tempo}(a.channelData,a.sampleRate,a.tempoSettings);postMessage({error:null,id:n,result:{tempo:o}})}else{if("guess"!==t.method)throw new Error('The given method "'.concat(t.method,'" is not supported'));var s=t.id,i=t.params,u=function(e,t,n){var a=r(e,t,n);if(0===a.length)throw new Error("The given channelData does not contain any detectable beats.");var o=a[0],s=o.peaks,i=o.tempo,u=Math.round(i),f=60/u;s.sort(function(e,t){return e-t});for(var p=s[0]/t;p>f;)p-=f;return{bpm:u,offset:p,tempo:i,peaks:s}}(i.channelData,i.sampleRate,i.tempoSettings),f=u.bpm,p=u.offset,l=u.tempo,c=u.peaks;postMessage({error:null,id:s,result:{bpm:f,offset:p,tempo:l,peaks:c}})}}catch(e){postMessage({error:{message:e.message},id:t.id,result:null})}})});`; // tslint:disable-line:max-line-length
